# Path on the master node where to save Cilium config that gets passed to Cilium CLI on install/config change
cilium_config_file_path: "/home/{{ ansible_user }}/cilium-config.yml"

# Cilium version to be installed/upgraded/downgraded
cilium_version: '1.14.3'

# Cilium CLI version to be installed/upgraded/downgraded
# If left blank that latest version of Cilium CLI will be determined and installed
cilium_cli_version:

# Cilium CLI binary path
cilium_cli_bin_path: /usr/local/bin/cilium

# Kubectl binary path
cilium_kubectl_bin_path: kubectl

# Kubectl config path
cilium_kubeconfig_path: ~/.kube/config

# Cilium specific config

# Configure the kube-proxy replacement in Cilium BPF datapath
# Valid options are "true", "false".
# ref: https://docs.cilium.io/en/stable/network/kubernetes/kubeproxy-free/
cilium_kube_proxy_replacement: false

# (optional) Healthz server bind address for the kube-proxy replacement.
# To enable set the value to '0.0.0.0:10256' for all ipv4
# addresses and this '[::]:10256' for all ipv6 addresses.
# cilium_kube_proxy_healtz_address: 0.0.0.0:10256

# (optional) Cilium Operator configuration
# cilium_operator_configuration:
#   enabled: true
#   replicas: 2
#   priorityClassName: "high-priority"

# (string) Kubernetes service host
cilium_k8s_service_host: ''

# (string) Kubernetes service port
cilium_k8s_service_port: "6443"

# (optional) Configure IP Address Management mode.
# ref: https://docs.cilium.io/en/stable/network/concepts/ipam/
# cilium_ipam_configuration:
#   ipam:
#     mode: cluster-pool
#     operator:
#       clusterPoolIPv4PodCIDRList:
#         - 10.10.0.0/16
#         - 172.20.0.0/16
#       clusterPoolIPv4MaskSize: 24

# (optional) BPF related configuration
# cilium_bpf_configuration:
#   masquerade: true
#   lbMapMax: 65536

# Enable IPv4 support.
cilium_enable_ipv4: true

# Enable IPv6 support.
cilium_enable_ipv6: false

# Enable native-routing mode or tunneling mode.
# Possible values:
#   - ""
#   - native
#   - tunnel
cilium_routing_mode: tunnel

# Tunneling protocol to use in tunneling mode and for ad-hoc tunnels.
# Possible values:
#   - ""
#   - vxlan
#   - geneve
cilium_tunnel_protocol: geneve

# Enables masquerading of IPv4 traffic leaving the node from endpoints.
cilium_enable_ipv4_masq: true

# Enables masquerading of IPv6 traffic leaving the node from endpoints.
cilium_enable_ipv6_masq: false

# (optional) Allows to explicitly specify the IPv4 CIDR for native routing.
# When specified, Cilium assumes networking for this CIDR is preconfigured and
# hands traffic destined for that range to the Linux network stack without
# applying any SNAT.
# Generally speaking, specifying a native routing CIDR implies that Cilium can
# depend on the underlying networking stack to route packets to their
# destination. To offer a concrete example, if Cilium is configured to use
# direct routing and the Kubernetes CIDR is included in the native routing CIDR,
# the user must configure the routes to reach pods, either manually or by
# setting the auto-direct-node-routes flag.
# cilium_ipv4_native_cidr:

# (optional) Same as above but for IPv6
# cilium_ipv6_native_cidr:

# (optional) Enable installation of PodCIDR routes between worker
# nodes if worker nodes share a common L2 network segment.
# Possible values:
#   - true
#   - false
# cilium_autodirect_node_routes:

# (optional) Configure service load balancing
# cilium_load_balancer_config:
#   algorithm: maglev
#   mode: dsr
#   dsrDispatch: geneve
#   acceleration: disabled

# (optional) Configure maglev consistent hashing
# Will be excluded from config if left blank (None)
# https://docs.cilium.io/en/stable/network/kubernetes/kubeproxy-free/#maglev-consistent-hashing
cilium_maglev_config:
  # maglev:
  #   tableSize: 16381
  #   hashSeed: flGITJblThc3dnNy

# Enable Layer 7 network policy.
cilium_l7_proxy: true

# (optional) This feature set enables virtual BGP routers to be created via CiliumBGPPeeringPolicy CRDs.
# Will be excluded from config if left blank (None)
cilium_bgp_control_plane_config:
  # bgpControlPlane:
  #   enabled: true

# (optional) Enable cilium ingress controller
# This will automatically set enable-envoy-config as well.
# Will be excluded from config if left blank (None)
cilium_ingress_controler_config:
  # ingressController:
  #   default: true
  #   enabled: true
  #   loadbalancerMode: dedicated
  #   ingressLBAnnotationPrefixes:
  #     - service.kubernetes.io
  #     - service.beta.kubernetes.io
  #     - io.cilium

# Enable support for Gateway API in cilium
# This will automatically set enable-envoy-config as well.
# additional CRDs need to be installed to enable gateway API
# https://docs.cilium.io/en/stable/network/servicemesh/gateway-api/gateway-api/
# Will be excluded from config if left blank (None)
cilium_gateway_api_config:
  # gatewayAPI:
  #   enabled: false

# Additional options to pass to cilium config in yaml format
# Will be excluded from config if left blank (None)
cilium_additional_options:
