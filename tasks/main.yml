---
- name: Determine Cilium CLI version
  when: cilium_cli_version is not defined or cilium_cli_version == None
  block:
    - name: Determine latest Cilium CLI version
      ansible.builtin.uri:
        url: https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt
        return_content: true
      register: cilium_latest_version

    - name: Set Cilium desired version variable
      ansible.builtin.set_fact:
        cilium_cli_version: "{{ cilium_latest_version.content | trim }}"

- name: Check if Cilium CLI binary exists
  ansible.builtin.stat:
    path: "{{ cilium_cli_bin_path }}"
  register: cilium_check

- name: Check Cilium CLI version
  ansible.builtin.shell: |
    set -o pipefail
    {{ cilium_cli_bin_path }} version | grep cilium-cli:
  args:
    executable: /bin/bash
  environment:
    KUBECONFIG: "{{ cilium_kubeconfig_path }}"
  failed_when: false
  changed_when: false
  register: cilium_cli_existing_version

- name: Install Cilium CLI
  when: not cilium_check.stat.exists or cilium_cli_version not in cilium_cli_existing_version.stdout
  block:
    - name: Set Cilium CLI architecture var
      ansible.builtin.set_fact:
        cilium_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

    - name: Download Cilium CLI
      ansible.builtin.unarchive:
        src: "https://github.com/cilium/cilium-cli/releases/download/{{ cilium_cli_version }}/cilium-linux-{{ cilium_arch }}.tar.gz"
        dest: /tmp
        remote_src: true
        mode: "0755"

    - name: Copy Cilium binary into place.
      ansible.builtin.copy:
        src: "/tmp/cilium"
        dest: "{{ cilium_cli_bin_path }}"
        mode: "0755"
        remote_src: true
      become: true

- name: Create Cilium config
  ansible.builtin.template:
    src: "cilium-config.j2"
    dest: "{{ cilium_config_file_path }}"
    mode: "0600"
  register: cilium_config

- name: Check Cilium version
  ansible.builtin.shell: |
    set -o pipefail
    {{ cilium_cli_bin_path }} version | grep 'cilium image (running):'
  args:
    executable: /bin/bash
  environment:
    KUBECONFIG: "{{ cilium_kubeconfig_path }}"
  failed_when: false
  changed_when: false
  register: cilium_running_version

- name: Determine Gateway API CRD urls based on desired version
  ansible.builtin.include_vars:
    file: vars/{{ cilium_gw_api_crds_version }}_gw_api_crds.yaml
  when: cilium_install_gw_api_crds | bool

- name: Install Gateway API CRDs
  ansible.builtin.command: "{{ cilium_kubectl_bin_path }} apply -f {{ item }}"
  environment:
    KUBECONFIG: "{{ cilium_kubeconfig_path }}"
  loop: "{{ cilium_gw_api_crds }}"
  when: cilium_install_gw_api_crds | bool

- name: Install Cilium
  ansible.builtin.command: "{{ cilium_cli_bin_path }} install --version {{ cilium_version }} -f {{ cilium_config_file_path }}"
  environment:
    KUBECONFIG: "{{ cilium_kubeconfig_path }}"
  register: cilium_install
  when: '"Unable to obtain cilium version" in cilium_running_version.stdout'

- name: Upgrade/downgrade Cilium or change Cilium config
  ansible.builtin.command: "{{ cilium_cli_bin_path }} upgrade --version {{ cilium_version }} -f {{ cilium_config_file_path }}"
  environment:
    KUBECONFIG: "{{ cilium_kubeconfig_path }}"
  register: cilium_upgrade
  when:
    - cilium_version not in cilium_running_version.stdout or cilium_config.changed
    - not cilium_install.changed

- name: Restart Cilium
  ansible.builtin.shell: |
    {{ cilium_kubectl_bin_path }} -n kube-system rollout restart deployment/cilium-operator
    {{ cilium_kubectl_bin_path }} -n kube-system rollout restart daemonset/cilium
  environment:
    KUBECONFIG: "{{ cilium_kubeconfig_path }}"
  changed_when: false
  register: cilium_restart
  when:
    - cilium_config.changed
    - not cilium_install.changed
    - cilium_restart_on_config_change | bool

- name: Wait for Cilium to be running and ready
  ansible.builtin.command: "{{ cilium_cli_bin_path }} status --wait --wait-duration 10m"
  environment:
    KUBECONFIG: "{{ cilium_kubeconfig_path }}"
  changed_when: false
  when: cilium_install.changed or cilium_upgrade.changed

- name: Install Hubble CLI
  ansible.builtin.include_tasks:
    file: tasks/hubble_cli.yml
  when: cilium_install_hubble_cli | bool
